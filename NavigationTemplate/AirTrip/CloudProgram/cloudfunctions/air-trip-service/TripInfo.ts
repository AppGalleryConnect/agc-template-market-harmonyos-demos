/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2023. All rights reserved.
 * Generated by the CloudDB ObjectType compiler. DO NOT EDIT!
 */

class TripInfo {
    id: string;
    flightNo: string;
    airlineName: string;
    aircraftType: string;
    aircraftAge: string;
    flyMiles: string;
    flyDuration: string;
    planTakeoffTime: string;
    planLandingTime: string;
    actualTakeoffTime: string;
    actualLandingTime: string;
    departureCity: string;
    departureAirport: string;
    destinationCity: string;
    destinationAirport: string;
    mealType: string;
    spaceType: string;
    includeTaxPrice: number;
    seatNo: string;
    ticketNo: string;
    status: string;

    constructor() {
    }

    getFieldTypeMap():  Map<string, string> {
        let fieldTypeMap = new Map<string, string>();
        fieldTypeMap.set('id', 'String');
        fieldTypeMap.set('flightNo', 'String');
        fieldTypeMap.set('airlineName', 'String');
        fieldTypeMap.set('aircraftType', 'String');
        fieldTypeMap.set('aircraftAge', 'String');
        fieldTypeMap.set('flyMiles', 'String');
        fieldTypeMap.set('flyDuration', 'String');
        fieldTypeMap.set('planTakeoffTime', 'String');
        fieldTypeMap.set('planLandingTime', 'String');
        fieldTypeMap.set('actualTakeoffTime', 'String');
        fieldTypeMap.set('actualLandingTime', 'String');
        fieldTypeMap.set('departureCity', 'String');
        fieldTypeMap.set('departureAirport', 'String');
        fieldTypeMap.set('destinationCity', 'String');
        fieldTypeMap.set('destinationAirport', 'String');
        fieldTypeMap.set('mealType', 'String');
        fieldTypeMap.set('spaceType', 'String');
        fieldTypeMap.set('includeTaxPrice', 'Double');
        fieldTypeMap.set('seatNo', 'String');
        fieldTypeMap.set('ticketNo', 'String');
        fieldTypeMap.set('status', 'String');
        return fieldTypeMap;
    }

    getClassName(): string {
        return 'TripInfo';
    }

    getPrimaryKeyList(): string[] {
        let primaryKeyList: string[] = [];
        primaryKeyList.push('id');
        return primaryKeyList;
    }

    getIndexList(): string[] {
        let indexList: string[] = [];
        return indexList;
    }

    getEncryptedFieldList(): string[] {
        let encryptedFieldList: string[] = [];
        return encryptedFieldList;
    }

    setId(id: string): void {
        this.id = id;
    }

    getId(): string  {
        return this.id;
    }

    setFlightNo(flightNo: string): void {
        this.flightNo = flightNo;
    }

    getFlightNo(): string  {
        return this.flightNo;
    }

    setAirlineName(airlineName: string): void {
        this.airlineName = airlineName;
    }

    getAirlineName(): string  {
        return this.airlineName;
    }

    setAircraftType(aircraftType: string): void {
        this.aircraftType = aircraftType;
    }

    getAircraftType(): string  {
        return this.aircraftType;
    }

    setAircraftAge(aircraftAge: string): void {
        this.aircraftAge = aircraftAge;
    }

    getAircraftAge(): string  {
        return this.aircraftAge;
    }

    setFlyMiles(flyMiles: string): void {
        this.flyMiles = flyMiles;
    }

    getFlyMiles(): string  {
        return this.flyMiles;
    }

    setFlyDuration(flyDuration: string): void {
        this.flyDuration = flyDuration;
    }

    getFlyDuration(): string  {
        return this.flyDuration;
    }

    setPlanTakeoffTime(planTakeoffTime: string): void {
        this.planTakeoffTime = planTakeoffTime;
    }

    getPlanTakeoffTime(): string  {
        return this.planTakeoffTime;
    }

    setPlanLandingTime(planLandingTime: string): void {
        this.planLandingTime = planLandingTime;
    }

    getPlanLandingTime(): string  {
        return this.planLandingTime;
    }

    setActualTakeoffTime(actualTakeoffTime: string): void {
        this.actualTakeoffTime = actualTakeoffTime;
    }

    getActualTakeoffTime(): string  {
        return this.actualTakeoffTime;
    }

    setActualLandingTime(actualLandingTime: string): void {
        this.actualLandingTime = actualLandingTime;
    }

    getActualLandingTime(): string  {
        return this.actualLandingTime;
    }

    setDepartureCity(departureCity: string): void {
        this.departureCity = departureCity;
    }

    getDepartureCity(): string  {
        return this.departureCity;
    }

    setDepartureAirport(departureAirport: string): void {
        this.departureAirport = departureAirport;
    }

    getDepartureAirport(): string  {
        return this.departureAirport;
    }

    setDestinationCity(destinationCity: string): void {
        this.destinationCity = destinationCity;
    }

    getDestinationCity(): string  {
        return this.destinationCity;
    }

    setDestinationAirport(destinationAirport: string): void {
        this.destinationAirport = destinationAirport;
    }

    getDestinationAirport(): string  {
        return this.destinationAirport;
    }

    setMealType(mealType: string): void {
        this.mealType = mealType;
    }

    getMealType(): string  {
        return this.mealType;
    }

    setSpaceType(spaceType: string): void {
        this.spaceType = spaceType;
    }

    getSpaceType(): string  {
        return this.spaceType;
    }

    setIncludeTaxPrice(includeTaxPrice: number): void {
        this.includeTaxPrice = includeTaxPrice;
    }

    getIncludeTaxPrice(): number  {
        return this.includeTaxPrice;
    }

    setSeatNo(seatNo: string): void {
        this.seatNo = seatNo;
    }

    getSeatNo(): string  {
        return this.seatNo;
    }

    setTicketNo(ticketNo: string): void {
        this.ticketNo = ticketNo;
    }

    getTicketNo(): string  {
        return this.ticketNo;
    }

    setStatus(status: string): void {
        this.status = status;
    }

    getStatus(): string  {
        return this.status;
    }

    static parseFrom(inputObject: any): TripInfo {
        let result = new TripInfo();
        if (!inputObject) {
            return result;
        }
        if (inputObject.id) {
            result.id = inputObject.id;
        }
        if (inputObject.flightNo) {
            result.flightNo = inputObject.flightNo;
        }
        if (inputObject.airlineName) {
            result.airlineName = inputObject.airlineName;
        }
        if (inputObject.aircraftType) {
            result.aircraftType = inputObject.aircraftType;
        }
        if (inputObject.aircraftAge) {
            result.aircraftAge = inputObject.aircraftAge;
        }
        if (inputObject.flyMiles) {
            result.flyMiles = inputObject.flyMiles;
        }
        if (inputObject.flyDuration) {
            result.flyDuration = inputObject.flyDuration;
        }
        if (inputObject.planTakeoffTime) {
            result.planTakeoffTime = inputObject.planTakeoffTime;
        }
        if (inputObject.planLandingTime) {
            result.planLandingTime = inputObject.planLandingTime;
        }
        if (inputObject.actualTakeoffTime) {
            result.actualTakeoffTime = inputObject.actualTakeoffTime;
        }
        if (inputObject.actualLandingTime) {
            result.actualLandingTime = inputObject.actualLandingTime;
        }
        if (inputObject.departureCity) {
            result.departureCity = inputObject.departureCity;
        }
        if (inputObject.departureAirport) {
            result.departureAirport = inputObject.departureAirport;
        }
        if (inputObject.destinationCity) {
            result.destinationCity = inputObject.destinationCity;
        }
        if (inputObject.destinationAirport) {
            result.destinationAirport = inputObject.destinationAirport;
        }
        if (inputObject.mealType) {
            result.mealType = inputObject.mealType;
        }
        if (inputObject.spaceType) {
            result.spaceType = inputObject.spaceType;
        }
        if (inputObject.includeTaxPrice) {
            result.includeTaxPrice = inputObject.includeTaxPrice;
        }
        if (inputObject.seatNo) {
            result.seatNo = inputObject.seatNo;
        }
        if (inputObject.ticketNo) {
            result.ticketNo = inputObject.ticketNo;
        }
        if (inputObject.status) {
            result.status = inputObject.status;
        }
        return result;
    }
}

export { TripInfo };