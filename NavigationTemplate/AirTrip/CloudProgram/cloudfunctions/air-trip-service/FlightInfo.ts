/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2023. All rights reserved.
 * Generated by the CloudDB ObjectType compiler. DO NOT EDIT!
 */

class FlightInfo {
    id: string;
    flightNo: string;
    airlineName: string;
    aircraftType: string;
    takeoffTime: string;
    landingTime: string;
    departureCity: string;
    departureAirport: string;
    destinationCity: string;
    destinationAirport: string;
    mealType: string;
    lowestPrice: string;
    lowestDiscount: string;

    constructor() {
    }

    getFieldTypeMap():  Map<string, string> {
        let fieldTypeMap = new Map<string, string>();
        fieldTypeMap.set('id', 'String');
        fieldTypeMap.set('flightNo', 'String');
        fieldTypeMap.set('airlineName', 'String');
        fieldTypeMap.set('aircraftType', 'String');
        fieldTypeMap.set('takeoffTime', 'String');
        fieldTypeMap.set('landingTime', 'String');
        fieldTypeMap.set('departureCity', 'String');
        fieldTypeMap.set('departureAirport', 'String');
        fieldTypeMap.set('destinationCity', 'String');
        fieldTypeMap.set('destinationAirport', 'String');
        fieldTypeMap.set('mealType', 'String');
        fieldTypeMap.set('lowestPrice', 'String');
        fieldTypeMap.set('lowestDiscount', 'String');
        return fieldTypeMap;
    }

    getClassName(): string {
        return 'FlightInfo';
    }

    getPrimaryKeyList(): string[] {
        let primaryKeyList: string[] = [];
        primaryKeyList.push('id');
        return primaryKeyList;
    }

    getIndexList(): string[] {
        let indexList: string[] = [];
        return indexList;
    }

    getEncryptedFieldList(): string[] {
        let encryptedFieldList: string[] = [];
        return encryptedFieldList;
    }

    setId(id: string): void {
        this.id = id;
    }

    getId(): string  {
        return this.id;
    }

    setFlightNo(flightNo: string): void {
        this.flightNo = flightNo;
    }

    getFlightNo(): string  {
        return this.flightNo;
    }

    setAirlineName(airlineName: string): void {
        this.airlineName = airlineName;
    }

    getAirlineName(): string  {
        return this.airlineName;
    }

    setAircraftType(aircraftType: string): void {
        this.aircraftType = aircraftType;
    }

    getAircraftType(): string  {
        return this.aircraftType;
    }

    setTakeoffTime(takeoffTime: string): void {
        this.takeoffTime = takeoffTime;
    }

    getTakeoffTime(): string  {
        return this.takeoffTime;
    }

    setLandingTime(landingTime: string): void {
        this.landingTime = landingTime;
    }

    getLandingTime(): string  {
        return this.landingTime;
    }

    setDepartureCity(departureCity: string): void {
        this.departureCity = departureCity;
    }

    getDepartureCity(): string  {
        return this.departureCity;
    }

    setDepartureAirport(departureAirport: string): void {
        this.departureAirport = departureAirport;
    }

    getDepartureAirport(): string  {
        return this.departureAirport;
    }

    setDestinationCity(destinationCity: string): void {
        this.destinationCity = destinationCity;
    }

    getDestinationCity(): string  {
        return this.destinationCity;
    }

    setDestinationAirport(destinationAirport: string): void {
        this.destinationAirport = destinationAirport;
    }

    getDestinationAirport(): string  {
        return this.destinationAirport;
    }

    setMealType(mealType: string): void {
        this.mealType = mealType;
    }

    getMealType(): string  {
        return this.mealType;
    }

    setLowestPrice(lowestPrice: string): void {
        this.lowestPrice = lowestPrice;
    }

    getLowestPrice(): string  {
        return this.lowestPrice;
    }

    setLowestDiscount(lowestDiscount: string): void {
        this.lowestDiscount = lowestDiscount;
    }

    getLowestDiscount(): string  {
        return this.lowestDiscount;
    }

    static parseFrom(inputObject: any): FlightInfo {
        let result = new FlightInfo();
        if (!inputObject) {
            return result;
        }
        if (inputObject.id) {
            result.id = inputObject.id;
        }
        if (inputObject.flightNo) {
            result.flightNo = inputObject.flightNo;
        }
        if (inputObject.airlineName) {
            result.airlineName = inputObject.airlineName;
        }
        if (inputObject.aircraftType) {
            result.aircraftType = inputObject.aircraftType;
        }
        if (inputObject.takeoffTime) {
            result.takeoffTime = inputObject.takeoffTime;
        }
        if (inputObject.landingTime) {
            result.landingTime = inputObject.landingTime;
        }
        if (inputObject.departureCity) {
            result.departureCity = inputObject.departureCity;
        }
        if (inputObject.departureAirport) {
            result.departureAirport = inputObject.departureAirport;
        }
        if (inputObject.destinationCity) {
            result.destinationCity = inputObject.destinationCity;
        }
        if (inputObject.destinationAirport) {
            result.destinationAirport = inputObject.destinationAirport;
        }
        if (inputObject.mealType) {
            result.mealType = inputObject.mealType;
        }
        if (inputObject.lowestPrice) {
            result.lowestPrice = inputObject.lowestPrice;
        }
        if (inputObject.lowestDiscount) {
            result.lowestDiscount = inputObject.lowestDiscount;
        }
        return result;
    }
}

export { FlightInfo };